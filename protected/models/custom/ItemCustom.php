<?php

/**
 * Class ItemCustom
 */

class ItemCustom extends Item
{
    public function attributeLabels()
    {
        return array(
            'id' => 'ID',
            'item_code' => 'Kode Barcode',
            'cat_code' => 'Kelompok',
            'price' => 'Harga',
            'qty_stock' => 'Stok',
            'name' => 'Nama Barang',
            'created_at' => 'Waktu Input',
            'created_by' => 'Diinput Oleh',
            'updated_at' => 'Terakhir Diperbarui',
            'updated_by' => 'Diperbarui Oleh',
            'description' => 'Deskripsi'
        );
    }

    public function rules()
    {
        return parent::rules(); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $className
     * @return ItemCustom
     */
    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public function search()
    {
        return parent::search(); // TODO: Change the autogenerated stub
    }

    /**
     * @return CActiveDataProvider
     */
    public function searchForHome() {
        $criteria= new CDbCriteria;
        $criteria->order = 'id DESC';

        return new CActiveDataProvider($this, array(
            'criteria'=>$criteria,
            'pagination'=>array(
                'pageSize' => 16
            )
        ));
    }

    public function searchForCatalogue($group) {
        $criteria= new CDbCriteria;
        $criteria->join = 'LEFT JOIN categories c ON t.cat_code = c.code';
        $criteria->compare('c.cat_group', $group);
        $criteria->order = 'id DESC';

        return new CActiveDataProvider($this, array(
            'criteria'=>$criteria,
            'pagination'=>array(
                'pageSize' => 16
            )
        ));
    }

    /**
     * @return string
     */
    public function getFirstImage() {
        $images = ImagesCustom::model()->findAllByAttributes(array('item_id'=>$this->id));
        if (!empty($images)) {
            $cache = Yii::app()->iwi->load($images[0]->location);
            return Yii::app()->baseUrl.'/'.$cache->adaptive(400, 400)->cache();
        }
    }

    public function getAllThumbImage() {
        $images = ImagesCustom::model()->findAllByAttributes(array('item_id'=>$this->id));
        if (!empty($images)) {
            $img = array();
            foreach ($images as $row) {
                $cache = Yii::app()->iwi->load($row->location);
                $img[] = Yii::app()->baseUrl.'/'.$cache->adaptive(155,155)->cache();
            }
            return $img;
        }
    }

    public function getAllBigImage() {
        $images = ImagesCustom::model()->findAllByAttributes(array('item_id'=>$this->id));
        if (!empty($images)) {
            $img = array();
            foreach ($images as $row) {
                $cache = Yii::app()->iwi->load($row->location);
                $img[] = Yii::app()->baseUrl.'/'.$cache->adaptive(800,800)->cache();
            }
            return $img;
        }
    }

    public function getCategory() {
        $model = CategoriesCustom::model()->findByAttributes(array('code'=>$this->cat_code));
        return $model->name;
    }
}